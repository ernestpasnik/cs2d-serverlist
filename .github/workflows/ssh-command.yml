name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy via SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_PASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            set -e
            DEPLOY_DIR="/home/$SSH_USER/cs2d-serverlist"
            cd "$DEPLOY_DIR"

            CS2D_DIR="$DEPLOY_DIR/public/cs2d"
            if [ -z "$(ls -A "$CS2D_DIR" 2>/dev/null)" ]; then
              mkdir -p "$CS2D_DIR"
              cd "$CS2D_DIR"

              # Fetch CS2D directly using commands already on the system
              ver=$(curl -s "https://unrealsoftware.de/game_cs2d.php" | grep -oE "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | sed -e 's/\.//g')
              cid=$(curl -s "https://unrealsoftware.de/get.php?get=cs2d_${ver}_linux.zip" | grep -m1 -o '"get.php[^"]\+"' | cut -d'"' -f2 | sed 's/.\+cid=//g')
              curl -s "https://unrealsoftware.de/get.php?get=cs2d_${ver}_linux.zip&p=1&cid=${cid}" -o "cs2d_${ver}_linux.zip"
              curl -s "https://unrealsoftware.de/files_pub/cs2d_dedicated_linux.zip" -o "cs2d_dedicated_linux.zip"

              unzip -qq -o "cs2d_${ver}_linux.zip"
              unzip -qq -o "cs2d_dedicated_linux.zip"

              chmod +x cs2d_dedicated

              # Cleanup unnecessary files
              rm -rf help logos screens gfx/fonts sys/cache sys/language \
              cs2d_${ver}_linux.zip cs2d_dedicated_linux.zip CS2D libsteam_api.so maps/temp.map \
              Readme.txt sys/autobuy.cfg sys/autoexec.cfg sys/config.cfg sys/controls.cfg \
              sys/editor.cfg sys/filters.cfg sys/mods.cfg sys/controls.lst sys/favorites.lst \
              sys/maptypes.lst sys/core/dls.cache sys/core/svl.cache sys/core/version.cfg
            fi

            # Minify CSS using existing system commands (if installed)
            if [ -f "$DEPLOY_DIR/public/css/main.css" ]; then
              if command -v uglifycss >/dev/null 2>&1; then
                uglifycss "$DEPLOY_DIR/public/css/main.css" > "$DEPLOY_DIR/public/styles.css" || true
              fi
              rm -rf "$DEPLOY_DIR/public/css" || true
            fi

            # Restart PM2
            if command -v pm2 >/dev/null 2>&1; then
              pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
            fi
          EOF
