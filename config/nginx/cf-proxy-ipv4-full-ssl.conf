# Nginx Configuration
# 
# Used when:
# - Domain is proxied via IPv4 in Cloudflare.
# - Cloudflare handles HTTP->HTTPS and WWW->non-WWW redirection.
# - Cloudflare encryption mode is set to "Full".

server {
    # HTTPS with letsencrypt
    server_name cs2d.pp.ua;
    root /usr/share/nginx/cs2d-serverlist/public;
    client_max_body_size 1M;
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/cs2d.pp.ua/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cs2d.pp.ua/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Cloudflare real IP settings
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header X-Forwarded-For;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "0" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "upgrade-insecure-requests" always;

    # Serving robots.txt
    location = /robots.txt {
        default_type text/plain;
        return 200 "User-agent: *\nDisallow: /api/\n";
    }

    # Static content
    location ~* \.(?:ico|css|js|jpg|bmp|png|webp|lua)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri @node_backend;
    }

    # Fallback for all other routes
    location / {
        try_files $uri @node_backend;
    }

    # Proxy requests to Node.js
    location @node_backend {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log /var/log/nginx/cs2d-serverlist.log;
        if ($request_uri ~ ^/api/) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET';
        }
    }
}
