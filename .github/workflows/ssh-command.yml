name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ----------------------------
      # Cache npm global packages
      # ----------------------------
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}

      # ----------------------------
      # Cache CS2D downloads
      # ----------------------------
      - name: Cache CS2D files
        uses: actions/cache@v3
        with:
          path: |
            /home/ubuntu/cs2d-serverlist/public/cs2d/cs2d_*.zip
          key: cs2d-cache-${{ github.ref }}

      # ----------------------------
      # Deploy locally
      # ----------------------------
      - name: Deploy locally on runner
        run: |
          set -e
          DEPLOY_DIR="/home/ubuntu/cs2d-serverlist"
          cd "$DEPLOY_DIR"

          # Install dependencies
          if [ "$(uname -m)" = "x86_64" ]; then
            if ! dpkg --print-foreign-architectures | grep -q "i386"; then
              sudo dpkg --add-architecture i386
              sudo apt update
            fi
            sudo apt install -y curl unzip libstdc++6:i386
          else
            sudo apt install -y curl unzip
          fi

          CS2D_DIR="$DEPLOY_DIR/public/cs2d"
          mkdir -p "$CS2D_DIR"
          cd "$CS2D_DIR"

          # Fetch CS2D if not cached
          ver=$(curl -Ss "https://unrealsoftware.de/game_cs2d.php" | grep -oE "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | sed -e 's/\.//g')
          CS2D_ZIP="cs2d_${ver}_linux.zip"
          if [ ! -f "$CS2D_ZIP" ]; then
            cid=$(curl -Ss "https://unrealsoftware.de/get.php?get=${CS2D_ZIP}" | grep -m 1 -o '"get.php[^"]+"' | cut -d'"' -f2 | sed 's/.\+cid=//g')
            curl -s "https://unrealsoftware.de/get.php?get=${CS2D_ZIP}&p=1&cid=${cid}" -o "$CS2D_ZIP"
          fi

          if [ ! -f "cs2d_dedicated_linux.zip" ]; then
            curl -s "https://unrealsoftware.de/files_pub/cs2d_dedicated_linux.zip" -o "cs2d_dedicated_linux.zip"
          fi

          # Unzip/update files
          unzip -qq -o "$CS2D_ZIP"
          unzip -qq -o "cs2d_dedicated_linux.zip"

          # Cleanup old files
          rm -rf help logos screens gfx/fonts sys/cache sys/language \
          CS2D libsteam_api.so maps/temp.map \
          Readme.txt sys/autobuy.cfg sys/autoexec.cfg sys/config.cfg sys/controls.cfg \
          sys/editor.cfg sys/filters.cfg sys/mods.cfg sys/controls.lst sys/favorites.lst \
          sys/maptypes.lst sys/core/dls.cache sys/core/svl.cache sys/core/version.cfg

          chmod +x cs2d_dedicated
          echo "CS2D dedicated server setup completed successfully."

          # Minify CSS
          if [ -f "$DEPLOY_DIR/public/css/main.css" ]; then
            command -v uglifycss >/dev/null 2>&1 || npm install -g uglifycss
            uglifycss "$DEPLOY_DIR/public/css/main.css" > "$DEPLOY_DIR/public/styles.css" || true
            rm -rf "$DEPLOY_DIR/public/css" || true
          fi

          # Reload PM2
          pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
